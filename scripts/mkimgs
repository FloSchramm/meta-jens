#!/bin/sh

set -x

IMGSPC=""
BUILD_IMAGES=""
IMAGES=""

for IMAGE in "$@"
do
    RECOVERY_IMAGE="rdm-core-image"

    echo $IMAGE | fgrep -e "-dev-image"
    test $? -eq 0 && RECOVERY_IMAGE="rdm-core-dev-image"

    IMAGES="${IMAGES}${IMGSPC}${IMAGE}"
    BUILD_IMAGES="${BUILD_IMAGES}${IMGSPC}${IMAGE}"
    IMGSPC=" "
    echo ${IMAGES} | fgrep -e "${RECOVERY_IMAGE}"
    if [ "$?" != "0" ]
    then
	IMAGES="${IMAGES} ${RECOVERY_IMAGE}"
    fi
done

set -e

for img in ${IMAGES}
do
    bitbake $img
done

UBOOT_SUFFIX="bin"
MACHINE=`grep MACHINE conf/local.conf | sed -E -e "s/[^']+'([^']+)'.*/\\1/"`
DEPLOY_DIR_IMAGE="tmp/deploy/images/${MACHINE}"
KERNEL_IMAGETYPE="uImage"
KERNEL_DEVICE_TREE=`bitbake -e ${IMAGE} | grep KERNEL_DEVICETREE= | sed -E -e 's/[^"]+"([^"]+)".*/\\1/'`

SYSIMG_VERSION=`bitbake -e system-image | grep PV= | sed -E -e 's/[^"]+"([^"]+)".*/\\1/'`

kernel_bin="`readlink ${DEPLOY_DIR_IMAGE}/${KERNEL_IMAGETYPE}-${MACHINE}.bin`"
kernel_dtb="`readlink ${DEPLOY_DIR_IMAGE}/${KERNEL_IMAGETYPE}-${MACHINE}.dtb || true`"

KERNEL="${kernel_bin}"
KERNEL_PREPARE="mv ${kernel_bin} ${KERNEL_IMAGETYPE}-${MACHINE}"
KERNEL_RECOVERY="ln -f ${KERNEL_IMAGETYPE} ${KERNEL_IMAGETYPE}-${MACHINE}"
KERNEL_SANITIZE="mv ${KERNEL_IMAGETYPE}-${MACHINE} ${KERNEL_IMAGETYPE}"
if [ -n "${KERNEL_DEVICE_TREE}" ]
then
    for DTS_FILE in ${KERNEL_DEVICE_TREE}
    do
	DTS_BASE_NAME=`basename ${DTS_FILE} | awk -F "." '{print $1}'`
	if [ -e "${KERNEL_IMAGETYPE}-${DTS_BASE_NAME}.dtb" ]
	then
	    kernel_bin_for_dtb="`readlink ${DEPLOY_DIR_IMAGE}/${KERNEL_IMAGETYPE}-${DTS_BASE_NAME}.dtb | sed "s,$DTS_BASE_NAME,${MACHINE},g;s,\.dtb$,.bin,g"`"
	    if [ $kernel_bin = $kernel_bin_for_dtb ]
	    then
		FILES="${FILES} ${KERNEL_IMAGETYPE}-${DTS_BASE_NAME}.dtb ${kernel_bin_for_dtb}"
		KERNEL="${KERNEL} ${kernel_bin_for_dtb}"
		KERNEL_PREPARE="${KERNEL_PREPARE} && mv ${kernel_bin_for_dtb} ${KERNEL_IMAGETYPE}-${MACHINE}-${DTS_BASE_NAME}.dtb"
		KERNEL_RECOVERY="${KERNEL_RECOVERY} && ln -f ${KERNEL_IMAGETYPE}-${MACHINE}-${DTS_BASE_NAME}.dtb ${KERNEL_IMAGETYPE}-${DTS_BASE_NAME}.dtb"
		KERNEL_SANITIZE="${KERNEL_SANITIZE} && mv ${KERNEL_IMAGETYPE}-${MACHINE}-${DTS_BASE_NAME}.dtb ${KERNEL_IMAGETYPE}-${DTS_BASE_NAME}.dtb"
	    fi
	fi
    done
fi

for IMAGE in ${BUILD_IMAGES}
do
    FILES=".${IMAGE}-${SYSIMG_VERSION}-settings .settings ${KERNEL_IMAGETYPE}-${MACHINE}.bin ${kernel_bin}"
    RECOVERY_IMAGE="rdm-core-image"

    set +e
    echo $IMAGE | fgrep -e "-dev-image"
    test $? -eq 0 && RECOVERY_IMAGE="rdm-core-dev-image"
    set -e

    uboot_bin="`readlink ${DEPLOY_DIR_IMAGE}/u-boot-${MACHINE}.${UBOOT_SUFFIX}`"
    FILES="${FILES} u-boot-${MACHINE}.${UBOOT_SUFFIX} ${uboot_bin}"

    rootimg="`readlink ${DEPLOY_DIR_IMAGE}/${IMAGE}-${MACHINE}.squashfs-xz`"
    FILES="${FILES} ${rootimg}"

    recimg="`readlink ${DEPLOY_DIR_IMAGE}/${RECOVERY_IMAGE}-${MACHINE}.squashfs-xz`"
    FILES="${FILES} ${recimg}"

cat >${DEPLOY_DIR_IMAGE}/.${IMAGE}-${SYSIMG_VERSION}-settings <<EOS
SYSIMG_VER=${SYSIMG_VERSION}
DEV=${DEV}
MACHINE=${MACHINE}
UBOOT_BIN=${uboot_bin}
UBOOT_PADDING="2"
KERNEL="${KERNEL}"
ROOTIMG=${rootimg}
RECOVERIMG=${recimg}
KERNEL_PREPARE="${KERNEL_PREPARE}"
KERNEL_RECOVERY="${KERNEL_RECOVERY}"
KERNEL_SANITIZE="${KERNEL_SANITIZE}"
EOS

    # XXX change next line into ln -sf after next applied update ...
    (cd ${DEPLOY_DIR_IMAGE} && cp -f .${IMAGE}-${SYSIMG_VERSION}-settings .settings)
    (cd ${DEPLOY_DIR_IMAGE} && rm -f ${IMAGE}-complete-${SYSIMG_VERSION}.cpi)
    (cd ${DEPLOY_DIR_IMAGE} && tar cjf ${IMAGE}-complete-${SYSIMG_VERSION}.cpi ${FILES})
    (cd ${DEPLOY_DIR_IMAGE} && ln -sf ${IMAGE}-complete-${SYSIMG_VERSION}.cpi ${IMAGE}-complete.cpi)
done
