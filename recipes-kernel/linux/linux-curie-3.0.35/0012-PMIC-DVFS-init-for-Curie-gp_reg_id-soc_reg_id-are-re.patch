From 8b687c25f0709913dfa4efd43d6dd990d63fa184 Mon Sep 17 00:00:00 2001
From: gao.cui <gao.cui@windsolve.com>
Date: Sun, 13 Jul 2014 17:10:54 +0800
Subject: [PATCH 12/30] PMIC & DVFS init for Curie gp_reg_id & soc_reg_id are required by mx6_cpu_regulator_init(). These two variables are initialized by DVFS platform data, otherwise, the kernel will fail to find the cpu regulator and crash. So pFuze & DVFS init are both added in board init.

---
 arch/arm/mach-mx6/board-mx6q_curie.c         |   50 ++++++++++++++++++++++++++
 arch/arm/mach-mx6/board-mx6q_curie.h         |    2 +
 arch/arm/mach-mx6/mx6q_curie_pmic_pfuze100.c |   15 +++++---
 3 files changed, 62 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-mx6/board-mx6q_curie.c b/arch/arm/mach-mx6/board-mx6q_curie.c
index 17a10e1..239f49c 100644
--- a/arch/arm/mach-mx6/board-mx6q_curie.c
+++ b/arch/arm/mach-mx6/board-mx6q_curie.c
@@ -78,6 +78,11 @@
 #include "cpu_op-mx6.h"
 #include "board-mx6q_curie.h"
 
+/* CPU Regulator Global */
+extern char *gp_reg_id;
+extern char *soc_reg_id;
+extern char *pu_reg_id;
+
 /* Debug Uart */
 static inline void mx6q_curie_init_uart(void)
 {
@@ -136,6 +141,44 @@ static struct i2c_board_info mx6q_curie_i2c1_board_info[] __initdata = {
 	},
 };
 
+/* DVFS */
+static struct mxc_dvfs_platform_data mx6q_curie_dvfscore_data = {
+	.reg_id = "VDDCORE",
+	.soc_id	= "VDDSOC",
+	.clk1_id = "cpu_clk",
+	.clk2_id = "gpc_dvfs_clk",
+	.gpc_cntr_offset = MXC_GPC_CNTR_OFFSET,
+	.ccm_cdcr_offset = MXC_CCM_CDCR_OFFSET,
+	.ccm_cacrr_offset = MXC_CCM_CACRR_OFFSET,
+	.ccm_cdhipr_offset = MXC_CCM_CDHIPR_OFFSET,
+	.prediv_mask = 0x1F800,
+	.prediv_offset = 11,
+	.prediv_val = 3,
+	.div3ck_mask = 0xE0000000,
+	.div3ck_offset = 29,
+	.div3ck_val = 2,
+	.emac_val = 0x08,
+	.upthr_val = 25,
+	.dnthr_val = 9,
+	.pncthr_val = 33,
+	.upcnt_val = 10,
+	.dncnt_val = 10,
+	.delay_time = 80,
+};
+
+/* PMIC */
+#define CURIE_PMIC_INT        IMX_GPIO_NR(7, 13)
+extern int mx6q_curie_init_pfuze100(u32 int_gpio);
+static void __init mx6q_curie_init_pmic(void)
+{
+	int ret = gpio_request(CURIE_PMIC_INT, "pFUZE-int");
+	if (ret) {
+		printk(KERN_ERR"request pFUZE-int error!!\n");
+		return;
+	}
+	gpio_direction_input(CURIE_PMIC_INT);
+	mx6q_curie_init_pfuze100(CURIE_PMIC_INT);
+}
 
 /* Board Functions */
 static void __init fixup_mxc_board(struct machine_desc *desc, struct tag *tags,
@@ -171,6 +214,13 @@ static void __init mx6_curie_board_init(void)
 	imx6q_add_imx_i2c(2, &mx6q_curie_i2c_data);
 	i2c_register_board_info(1, mx6q_curie_i2c1_board_info,
 			ARRAY_SIZE(mx6q_curie_i2c1_board_info));
+	/* CPU Regulator Global */
+	gp_reg_id = mx6q_curie_dvfscore_data.reg_id;
+	soc_reg_id = mx6q_curie_dvfscore_data.soc_id;
+	/* PMIC */
+	mx6q_curie_init_pmic();
+	/* DVFS */
+	imx6q_add_dvfs_core(&mx6q_curie_dvfscore_data);
 }
 
 extern void __iomem *twd_base;
diff --git a/arch/arm/mach-mx6/board-mx6q_curie.h b/arch/arm/mach-mx6/board-mx6q_curie.h
index c169b35..5be19f9 100644
--- a/arch/arm/mach-mx6/board-mx6q_curie.h
+++ b/arch/arm/mach-mx6/board-mx6q_curie.h
@@ -58,6 +58,8 @@ static iomux_v3_cfg_t mx6q_curie_pads[] = {
 	MX6Q_PAD_EIM_D18__I2C3_SDA,
 	MX6Q_PAD_EIM_D17__I2C3_SCL,
 
+	/* PMIC_INT_B */
+	MX6Q_PAD_GPIO_18__GPIO_7_13,
 };
 
 #endif
diff --git a/arch/arm/mach-mx6/mx6q_curie_pmic_pfuze100.c b/arch/arm/mach-mx6/mx6q_curie_pmic_pfuze100.c
index c18a014..7b44c3c 100644
--- a/arch/arm/mach-mx6/mx6q_curie_pmic_pfuze100.c
+++ b/arch/arm/mach-mx6/mx6q_curie_pmic_pfuze100.c
@@ -485,13 +485,18 @@ static int pfuze100_init(struct mc_pfuze *pfuze)
 		if (ret)
 			goto err;
 	}
+
+	// disable boost 5V output, it is unused
+	pfuze_reg_write(pfuze, 0x66, 0x00);
+	// disable coin charger, we have external charger circuit
+	pfuze_reg_write(pfuze, 0x1A, 0x00);
 	return 0;
 err:
 	printk(KERN_ERR "pfuze100 init error!\n");
 	return -1;
 }
 
-static struct pfuze_regulator_init_data mx6q_sabreauto_pfuze100_regulators[] = {
+static struct pfuze_regulator_init_data mx6q_curie_pfuze100_regulators[] = {
 	{.id = PFUZE100_SW1A,	.init_data = &sw1a_init},
 	{.id = PFUZE100_SW1B,	.init_data = &sw1b_init},
 	{.id = PFUZE100_SW1C,	.init_data = &sw1c_init},
@@ -512,8 +517,8 @@ static struct pfuze_regulator_init_data mx6q_sabreauto_pfuze100_regulators[] = {
 
 static struct pfuze_platform_data pfuze100_plat = {
 	.flags = PFUZE_USE_REGULATOR,
-	.num_regulators = ARRAY_SIZE(mx6q_sabreauto_pfuze100_regulators),
-	.regulators = mx6q_sabreauto_pfuze100_regulators,
+	.num_regulators = ARRAY_SIZE(mx6q_curie_pfuze100_regulators),
+	.regulators = mx6q_curie_pfuze100_regulators,
 	.pfuze_init = pfuze100_init,
 };
 
@@ -522,8 +527,8 @@ static struct i2c_board_info __initdata pfuze100_i2c_device = {
 	.platform_data = &pfuze100_plat,
 };
 
-int __init mx6q_sabresd_init_pfuze100(u32 int_gpio)
+int __init mx6q_curie_init_pfuze100(u32 int_gpio)
 {
 	pfuze100_i2c_device.irq = gpio_to_irq(int_gpio); /*update INT gpio */
-	return i2c_register_board_info(1, &pfuze100_i2c_device, 1);
+	return i2c_register_board_info(2, &pfuze100_i2c_device, 1);
 }
-- 
1.7.0.4

