diff --git a/src/duofern/DuoFernDongle.cpp b/src/duofern/DuoFernDongle.cpp
index fc23e8d..cd262ea 100755
--- a/src/duofern/DuoFernDongle.cpp
+++ b/src/duofern/DuoFernDongle.cpp
@@ -7,42 +7,35 @@
 
 #include "DuoFernDongle.h"
 
+#include <string.h>
+#include <stdlib.h>
+#include <unistd.h>
+
 /* FTDIDEVICE */
 
 FtdiDevice::FtdiDevice(int v, int p) {
 	vendorId = v;
 	productId = p;
 	context = NULL;
-	eeprom = NULL;
 }
 
 Result FtdiDevice::init() {
 	if (context) {
-		ftdi_deinit(context);
+		ftdi_free(context);
 		context = NULL;
 	}
-	if (eeprom) {
-		ftdi_eeprom_free(eeprom);
-		eeprom = NULL;
+	if (!context) {
+		if( !(context = ftdi_new()) )
+			return Failure;
 	}
-	if (!context)
-		context = new ftdi_context;
-	if (!eeprom)
-		eeprom = new ftdi_eeprom;
-	ftdi_init(context);
-	ftdi_eeprom_initdefaults(eeprom);
 	return Success;
 }
 
 FtdiDevice::~FtdiDevice() {
 	if (context != NULL) {
-		ftdi_deinit(context);
+		ftdi_free(context);
 		context = NULL;
 	}
-	if (eeprom) {
-		ftdi_eeprom_free(eeprom);
-		eeprom = NULL;
-	}
 }
 
 int FtdiDevice::getNumberOfDevices() {
@@ -68,45 +61,6 @@ Result FtdiDevice::openDevice(int id) {
 	return Failure;
 }
 
-//Result FtdiDevice::openDevice(int id) {
-//	int ret = 0;
-//	if ((ret = ftdi_usb_open_desc(context, VENDOR, PRODUCTID,
-//	FTDI_DF_PRODUCTNAME, NULL)) == 0) {
-//		if (ret)
-//			return Failure;
-//	}
-//	if (ret < 0) {
-//		// Narf ... alter Stick?
-//		ret = ftdi_usb_open_desc_index(context, VENDOR, PRODUCTID, NULL, NULL,
-//				id);
-//		if (ret)
-//			return Failure;
-//		else
-//			printf("Detected old stick - remember to set product-name!\n");
-//
-//	}
-//	ftdi_usb_reset(context);
-//	// Get dev info ...
-////	int eeprom_size = 512;
-////	unsigned char eeprom_dump[eeprom_size];
-////	int size = ftdi_read_eeprom_getsize(context, eeprom_dump, eeprom_size);
-////	if (size >= 0) {
-////		// Ok ...
-////		unsigned char eepromBytes[size];
-////		if (ftdi_read_eeprom(context, eepromBytes) == 0) {
-////			if (0 == ftdi_eeprom_decode(eeprom, eepromBytes, size)) {
-////				if (eeprom->size == 0)
-////					printf("Eeprom-size == 0\n");
-////			} else {
-////				printf("ftdi_eeprom_decode failed.\n");
-////			}
-////
-////		}
-////	}
-//
-//	return Success;
-//}
-
 Result FtdiDevice::closeDevice() {
 	if (context == NULL)
 		return Success;
@@ -181,51 +135,6 @@ Result FtdiDevice::purgeTxBuffer() {
 	return Failure;
 }
 
-//Result FtdiDevice::setProductName(const char* name, const char* manufactorer,
-//		const char* serial) {
-//	if (!eeprom)
-//		return Failure;
-//	if (eeprom->product)
-//		delete[] eeprom->product;
-//	if (eeprom->manufacturer)
-//		delete[] eeprom->manufacturer;
-//	if (eeprom->serial)
-//		delete[] eeprom->serial;
-//
-//	size_t size = strlen(name) + 1;
-//	char* nName = new char[size];
-//	memset(nName, 0, size);
-//	memcpy(nName, name, size - 1);
-//	eeprom->product = nName;
-//
-//	size = strlen(name) + 1;
-//	char* nManu = new char[size];
-//	memset(nManu, 0, size);
-//	memcpy(nManu, manufactorer, size);
-//	eeprom->manufacturer = nManu;
-//
-//	size = strlen(name) + 1;
-//	char* nSerial = new char[size];
-//	memset(nSerial, 0, size);
-//	memcpy(nSerial, serial, size);
-//	eeprom->serial = nSerial;
-//
-//	unsigned char ucEeprom[128];
-//	int ret = ftdi_eeprom_build(eeprom, ucEeprom);
-//	if (ret < 0) {
-//		// Error
-//		printf("Error\n");
-//		return Failure;
-//	} else {
-//		// ret > 0, == 0 nicht definiert in ftdi_eeprom_build
-//		printf("Writing eeprom ... ");
-//		ftdi_write_eeprom(context, ucEeprom);
-//		printf("Done\n");
-//	}
-//
-//	return Success;
-//}
-
 /* DUOFERNDONGLE */
 
 DuoFernDongle::DuoFernDongle(ILowLevelMessageHandler* handler) :
@@ -233,7 +142,6 @@ DuoFernDongle::DuoFernDongle(ILowLevelMessageHandler* handler) :
 	_mode = ModeNone;
 
 	string path = string(AppDir::getUserDir() + DEFAULT_CONFIG_FILEPATH);
-//	_szConfigFilePath = new char[path.length() + 1];
 	_szConfigFilePath = (char*) calloc(1, path.length() + 1);
 	memcpy(_szConfigFilePath, path.c_str(), path.length());
 	_szConfigFilePath[path.length()] = 0;
@@ -287,7 +195,6 @@ Result DuoFernDongle::init(DongleMode mode) {
 		msg.data[0] = ModeInterface;
 		if (sendMessage(msg) == Success) {
 			/* Nun geht es darum den Stick zu validieren. */
-			validateStick();
 			if (reset() != Success) {
 				// Wieder freigeben!
 				return FailureReset;
@@ -335,26 +242,6 @@ unsigned char* DuoFernDongle::getSerial() {
 	return _serial;
 }
 
-void DuoFernDongle::validateStick() {
-	if (!eeprom) {
-		return;
-	}
-	//	if (eeprom->product == NULL) {
-	/* Seriennummer ins Eeprom schreiben ... */
-	int maxLen = 9;
-	char serial[maxLen];
-	memset(serial, 0, maxLen);
-	sprintf(serial, "%s%2.2X%2.2X", FTDI_DF_SERIAL, _serial[1], _serial[2]);
-	// Wenn Seriennummer anders -> Schreiben
-	if (eeprom->serial) {
-		if (!strcmp(eeprom->serial, serial)) // Gleich
-			return;
-	}
-	// else
-	//setProductName(FTDI_DF_PRODUCTNAME, FTDI_DF_MANUFACTORERNAME, serial);
-//	}
-}
-
 Result DuoFernDongle::sendMessage(DuoFernMessage_t msg,
 		pDuoFernMessage_t msgAck) {
 	Common::identity(msgAck);
diff --git a/src/duofern/DuoFernDongle.h b/src/duofern/DuoFernDongle.h
index d699771..a6bc488 100755
--- a/src/duofern/DuoFernDongle.h
+++ b/src/duofern/DuoFernDongle.h
@@ -54,7 +54,6 @@ protected:
 	int vendorId;
 	int productId;
 	struct ftdi_context* context; // Handle
-	struct ftdi_eeprom* eeprom;
 
 	FtdiDevice(int vendorId, int productId);
 	virtual ~FtdiDevice();
@@ -164,9 +163,6 @@ private:
 	Result transferPairTable();
 	int getFreePairIndex();
 	int getPairingIndex(unsigned char* addr);
-
-	void validateStick();
-
 };
 
 #endif /* DUOFERNDONGLE_H_ */
diff --git a/src/duofern/DuoFernDongleApi.cpp b/src/duofern/DuoFernDongleApi.cpp
index 7dcf98d..8cf01cd 100755
--- a/src/duofern/DuoFernDongleApi.cpp
+++ b/src/duofern/DuoFernDongleApi.cpp
@@ -1,4 +1,6 @@
 #include "DuoFernDongleApi.h"
+#include <stdlib.h>
+#include <unistd.h>
 
 DuoFernDongleApi* DuoFernDongleApi::_instance = NULL;
 
